<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>如何将语雀文章发布到Hexo博客</title>
      <link href="/2023/02/07/%E5%A6%82%E4%BD%95%E5%B0%86%E8%AF%AD%E9%9B%80%E6%96%87%E7%AB%A0%E5%8F%91%E5%B8%83%E5%88%B0Hexo%E5%8D%9A%E5%AE%A2/"/>
      <url>/2023/02/07/%E5%A6%82%E4%BD%95%E5%B0%86%E8%AF%AD%E9%9B%80%E6%96%87%E7%AB%A0%E5%8F%91%E5%B8%83%E5%88%B0Hexo%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>实现语雀上的文章自动化发布到个人博客，首先是因为语雀本身是一个优秀的创作的平台，能方便的编辑和管理文章，但缺点是它本身是一个封闭的系统，就像微信公众号一样，不利于 SEO。其次个人博客是由自己搭建，没有任何限制，也能更好的进行 SEO。基于这两点原因，语雀+个人博客就是一个完美的组合，个人博客作为前台，语雀作为后台，既能很好的创造和管理文章，有能够将需要共享的文章发布到个人博客，供大家搜索。下面要做的就是建立起两者的桥梁。</p><a id="more"></a><h2 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a>传送门</h2><ul><li><a href="https://github.com/songxingguo/songxingguo.github.io" target="_blank" rel="noopener">项目地址</a></li><li>使用效果（视频）<br><a href="https://www.yuque.com/songxingguo/devhints/gwpsg4dq6tp27z3s?_lake_card=%7B%22status%22%3A%22done%22%2C%22name%22%3A%22%E5%B1%8F%E5%B9%95%E5%BD%95%E5%88%B62023-02-09%2019.39.30.mov%22%2C%22size%22%3A204453355%2C%22taskId%22%3A%22ua4cb8283-502b-4a55-b53e-7f0a9dd0a84%22%2C%22taskType%22%3A%22upload%22%2C%22url%22%3Anull%2C%22cover%22%3Anull%2C%22videoId%22%3A%22inputs%2Fprod%2Fyuque%2F2023%2F394169%2Fmov%2F1675943595043-2a636a15-97b2-4fd2-9038-a34841d5d6a3.mov%22%2C%22download%22%3Afalse%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22pqOSi%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22card%22%3A%22video%22%7D#pqOSi" target="_blank" rel="noopener"><img src="https://raw.githubusercontent.com/songxingguo/songxingguo.github.io/hexo/static/images/FvYEuJlUXy5ADawCvwN-yUw1zlI_.com/mdn/prod_resou/afts/img/A*NNs6TKOR3isAAAAAAAAAAABkARQnAQ" alt></a></li></ul><h2 id="设计思路"><a href="#设计思路" class="headerlink" title="设计思路"></a>设计思路</h2><p><img src="https://raw.githubusercontent.com/songxingguo/songxingguo.github.io/hexo/static/images/FlChHeNiAySN1-R3hmWCTrVo3BxH.jpeg" alt><br>整体的设计思路是每次语雀更新文档都通过 Webhook 发送钉钉消息，当手动点击【发布】的时候再触发 GithubAction 将 slug 对应的文章从语雀拉取下去并推送到博客仓库，最后部署博客。触发流程虽然是从语雀到 Github 的过程，但开发的过程是优先处理 Github 部分然后再由语雀触发 Webhook，开发过程主要包括以下几个步骤。</p><ol><li>配置<code>yuque-heox-publish</code></li><li>配置<code>.github/workflows/publish.yml</code></li><li>使用云函数触发 GithubAction</li><li>使用云函数推送钉钉消息</li><li>配置语雀 Webhook</li></ol><h3 id="yuque-hexo-publish是什么"><a href="#yuque-hexo-publish是什么" class="headerlink" title="yuque-hexo-publish是什么"></a><code>yuque-hexo-publish</code>是什么</h3><p><code>[yuque-hexo](https://github.com/x-cold/yuque-hexo)</code>是一个很优秀的插件，能将语雀的文章完全<strong>同步</strong>到个人博客上。但这并不满足我的需求，我需要的是发布而不是同步，我并不想把所有文章都<strong>同步</strong>到个人博客上，也不希望只能有一个知识库里面的文章能<strong>发布</strong>到个人博客，而是希望能把我想发布的文章都能<strong>发布</strong>到个人博客上。基于这个这个考虑我在<code>yuque-hexo</code>的基础上新增了发布功能，<code>yuque-hexo-publish</code>就此诞生了。yuque-hexo-publish 在功能上和 yuque-hexo 是完全一致的，只是新增了命令 publish。</p><h2 id="具体实施"><a href="#具体实施" class="headerlink" title="具体实施"></a>具体实施</h2><h3 id="Hexo-博客开发"><a href="#Hexo-博客开发" class="headerlink" title="Hexo 博客开发"></a>Hexo 博客开发</h3><h4 id="项目配置"><a href="#项目配置" class="headerlink" title="项目配置"></a>项目配置</h4><ol><li><code>package.json</code>中配置 yuque-hexo-publish。</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">"yuqueConfig":</span> <span class="string">&#123;</span></span><br><span class="line">  <span class="attr">"postPath":</span> <span class="string">"source/_posts"</span><span class="string">,</span> <span class="string">//文章目录</span></span><br><span class="line">  <span class="attr">"baseUrl":</span> <span class="string">"https://www.yuque.com/api/v2"</span><span class="string">,</span></span><br><span class="line">  <span class="attr">"login":</span> <span class="string">"songxingguo"</span><span class="string">,//用户名</span></span><br><span class="line">  <span class="attr">"repo":</span> <span class="string">"devhints"</span><span class="string">,</span> <span class="string">//知识库名称</span></span><br><span class="line">  <span class="attr">"onlyPublished":</span> <span class="literal">false</span><span class="string">,</span></span><br><span class="line">  <span class="attr">"onlyPublic":</span> <span class="literal">false</span><span class="string">,</span></span><br><span class="line">  <span class="attr">"imgCdn":</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="attr">"concurrency":</span> <span class="number">1</span><span class="string">,</span></span><br><span class="line">    <span class="attr">"imageBed":</span> <span class="string">"github"</span><span class="string">,</span> <span class="string">//图床类型</span></span><br><span class="line">    <span class="attr">"enabled":</span> <span class="literal">true</span><span class="string">,</span></span><br><span class="line">    <span class="attr">"bucket":</span> <span class="string">"songxingguo.github.io"</span><span class="string">,</span> <span class="string">//仓库地址</span></span><br><span class="line">    <span class="attr">"prefixKey":</span> <span class="string">"static/images"</span> <span class="string">//图片文件上传到仓库后的目录</span></span><br><span class="line">  <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>更详细的配置说明可以查看<code>[yuque-hexo-publish](https://github.com/songxingguo/yuque-hexo/tree/feature-publish)</code>。</p><ol start="2"><li><code>package.json</code>中添加任务脚本。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">  <span class="string">"build"</span>: <span class="string">"hexo generate"</span>,</span><br><span class="line">  <span class="string">"pulish"</span>: <span class="string">"yuque-hexo publish"</span>,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><ol start="3"><li>根目录下新建<code>.github/workflows/publish.yml</code>。</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">To</span> <span class="string">Github</span> <span class="string">Pages</span></span><br><span class="line"><span class="attr">on:</span> <span class="string">[repository_dispatch]</span></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build-and-deploy:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">🛎️</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v3</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">persist-credentials:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Node.js</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@master</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">"12.0.0"</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">and</span> <span class="string">Build</span> <span class="string">🔧</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="attr">YUQUE_TOKEN:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.YUQUE_TOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">SLUG:</span> <span class="string">$&#123;&#123;</span> <span class="string">github.event.client_payload.slug</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">SECRET_ID:</span> <span class="string">songxingguo</span></span><br><span class="line">          <span class="attr">SECRET_KEY:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.ACCESS_TOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">          <span class="string">npm</span> <span class="string">i</span></span><br><span class="line">          <span class="string">npm</span> <span class="string">run</span> <span class="string">publish</span></span><br><span class="line">          <span class="string">npm</span> <span class="string">run</span> <span class="string">build</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">配置Git用户名邮箱</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">          <span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">user.name</span> <span class="string">"songxingguo"</span></span><br><span class="line">          <span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">user.email</span> <span class="string">"1328989942@qq.com"</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">提交yuque拉取的文章到GitHub仓库</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">          <span class="string">git</span> <span class="string">pull</span></span><br><span class="line">          <span class="string">git</span> <span class="string">add</span> <span class="string">.</span></span><br><span class="line">          <span class="string">git</span> <span class="string">commit</span> <span class="string">-m</span> <span class="string">"feat:提交文章"</span> <span class="string">-a</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">推送文章到仓库</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">ad-m/github-push-action@master</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">github_token:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.ACCESS_TOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">🚀</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">JamesIves/github-pages-deploy-action@v4</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">ACCESS_TOKEN:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.ACCESS_TOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">BRANCH:</span> <span class="string">master</span></span><br><span class="line">          <span class="attr">FOLDER:</span> <span class="string">public</span></span><br><span class="line">          <span class="attr">CLEAN:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><code>YUQUE_TOKE</code>和<code>ACCESS_TOKEN</code>都是 Github 的环境变量，<code>github.event.client_payload.slug</code>是<code>[repository_dispatch](https://docs.github.com/zh/actions/using-workflows/events-that-trigger-workflows#repository_dispatch)</code>事件中传递的参数。</p><h4 id="如何本地调试"><a href="#如何本地调试" class="headerlink" title="如何本地调试"></a>如何本地调试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YUQUE_TOKEN=xxx SLUG=xxx yuque-hexo publish</span><br></pre></td></tr></table></figure><p><code>yuque-hexo publish</code>需要两个环境变量，<code>YUQUE_TOKEN</code>是语雀的<a href="https://www.yuque.com/settings/tokens" target="_blank" rel="noopener">授权码</a>，<code>SLUG</code>是语雀文章的 id。</p><h3 id="阿里云函数开发"><a href="#阿里云函数开发" class="headerlink" title="阿里云函数开发"></a>阿里云函数开发</h3><h4 id="初始化云函数"><a href="#初始化云函数" class="headerlink" title="初始化云函数"></a>初始化云函数</h4><ol><li>创建一个处理 http 请求的 node.js 云函数，<a href="https://fcnext.console.aliyun.com/cn-hangzhou/tasks" target="_blank" rel="noopener">云函数创建地址</a>。</li></ol><p><img src="https://raw.githubusercontent.com/songxingguo/songxingguo.github.io/hexo/static/images/FmgXhivkd1GDSXivmeXk4GFgJ5mW.png" alt></p><ol start="2"><li>创建好后的效果如下。</li></ol><p><img src="https://raw.githubusercontent.com/songxingguo/songxingguo.github.io/hexo/static/images/Fn9FBWVuiHojlCDdNBudsnalwEXs.png" alt></p><h4 id="调试云函数"><a href="#调试云函数" class="headerlink" title="调试云函数"></a>调试云函数</h4><ol><li>配置测试请求。</li></ol><p><img src="https://raw.githubusercontent.com/songxingguo/songxingguo.github.io/hexo/static/images/FrNF5Qqv5Z8c-GdIRsTEUU9fR6Rq.png" alt></p><ol start="2"><li>部署代码之后，点击【测试函数】，就可以看到日志输出。</li></ol><p><img src="https://raw.githubusercontent.com/songxingguo/songxingguo.github.io/hexo/static/images/Fm13C_KkS6MOfXCgdToHQqHVS7-p.png" alt></p><h4 id="使用云函数触发-GithubAction"><a href="#使用云函数触发-GithubAction" class="headerlink" title="使用云函数触发 GithubAction"></a>使用云函数触发 GithubAction</h4><p>这个函数是通过 Get 请求进行调用的。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="comment">//xx-xx-opbwmocbhe.cn-hangzhou.fcapp.run?slug=$&#123;slug&#125;`</span></span><br></pre></td></tr></table></figure><p>首先需要从参数中获取 slug。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> slug = params.queries.slug;</span><br></pre></td></tr></table></figure><p>然后使用<code>[repository_dispatch](https://docs.github.com/zh/actions/using-workflows/events-that-trigger-workflows#repository_dispatch)</code>事件触发 GithubAction，并将<code>slug</code>传给<code>client_payload</code>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> axios = <span class="built_in">require</span>(<span class="string">"axios"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> options = &#123;</span><br><span class="line">  method: <span class="string">"POST"</span>,</span><br><span class="line">  url: <span class="string">"https://api.github.com/repos/songxingguo/songxingguo.github.io/dispatches"</span>,</span><br><span class="line">  headers: &#123;</span><br><span class="line">    <span class="string">"content-type"</span>: <span class="string">"application/json"</span>,</span><br><span class="line">    Accept: <span class="string">"application/vnd.github+json"</span>,</span><br><span class="line">    Authorization: <span class="string">"Bearer GITHUB_TOKEN"</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  data: &#123; <span class="attr">event_type</span>: <span class="string">"publish"</span>, <span class="attr">client_payload</span>: &#123; slug &#125; &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">axios</span><br><span class="line">  .request(options)</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(response.data);</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.error(error);</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><p>其中<code>GITHUB_TOKEN</code>是 github 的授权码，获取和配置可以参考<a href="https://www.yuque.com/songxingguo/devhints/tfub27hk86lsdrpb" target="_blank" rel="noopener">使用 Github Action 部署静态网站</a>。<code>event_type</code>是活动类型这个和<code>.github/workflows/publish.yml</code>里面的<code>types</code>是一一对应的，如果<code>.github/workflows/publish.yml</code>中没有指定具体<code>types</code>，那这儿填任何值都是可以。更多信息可以查看<a href="https://docs.github.com/zh/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#repository_dispatch" target="_blank" rel="noopener">详细配置</a>。<br><img src="https://raw.githubusercontent.com/songxingguo/songxingguo.github.io/hexo/static/images/FveEzFT5TggObDiemqVIn5zlRzAd.png" alt><br>完整代码如下。</p><blockquote><p>需要注意 ⚠️ 异步执行的问题，可以通过<code>async-await</code>保证请求是在<code>resp.send</code>之前执行的。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> axios = <span class="built_in">require</span>(<span class="string">"axios"</span>);</span><br><span class="line"><span class="keyword">var</span> getRawBody = <span class="built_in">require</span>(<span class="string">"raw-body"</span>);</span><br><span class="line"><span class="keyword">var</span> getFormBody = <span class="built_in">require</span>(<span class="string">"body/form"</span>);</span><br><span class="line"><span class="keyword">var</span> body = <span class="built_in">require</span>(<span class="string">"body"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">To enable the initializer feature (https://help.aliyun.com/document_detail/156876.html)</span></span><br><span class="line"><span class="comment">please implement the initializer function as below：</span></span><br><span class="line"><span class="comment">exports.initializer = (context, callback) =&gt; &#123;</span></span><br><span class="line"><span class="comment">  console.log('initializing');</span></span><br><span class="line"><span class="comment">  callback(null, '');</span></span><br><span class="line"><span class="comment">&#125;;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">exports.handler = <span class="function">(<span class="params">req, resp, context</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> params = &#123;</span><br><span class="line">    path: req.path,</span><br><span class="line">    queries: req.queries,</span><br><span class="line">    headers: req.headers,</span><br><span class="line">    method: req.method,</span><br><span class="line">    requestURI: req.url,</span><br><span class="line">    clientIP: req.clientIP,</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  getRawBody(req, <span class="keyword">async</span> (err, body) =&gt; &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> req.queries) &#123;</span><br><span class="line">      <span class="keyword">var</span> value = req.queries[key];</span><br><span class="line">      resp.setHeader(key, value);</span><br><span class="line">    &#125;</span><br><span class="line">    resp.setHeader(<span class="string">"Content-Type"</span>, <span class="string">"text/plain"</span>);</span><br><span class="line">    params.body = body.toString();</span><br><span class="line">    <span class="keyword">const</span> slug = params.queries.slug;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"slug"</span>, slug);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> options = &#123;</span><br><span class="line">      method: <span class="string">"POST"</span>,</span><br><span class="line">      url: <span class="string">"https://api.github.com/repos/songxingguo/songxingguo.github.io/dispatches"</span>,</span><br><span class="line">      headers: &#123;</span><br><span class="line">        <span class="string">"content-type"</span>: <span class="string">"application/json"</span>,</span><br><span class="line">        Accept: <span class="string">"application/vnd.github+json"</span>,</span><br><span class="line">        Authorization: <span class="string">"Bearer xxx"</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      data: &#123; <span class="attr">event_type</span>: <span class="string">"publish"</span>, <span class="attr">client_payload</span>: &#123; slug &#125; &#125;,</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">await</span> axios</span><br><span class="line">      .request(options)</span><br><span class="line">      .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(response.data);</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.error(error);</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">    resp.send(<span class="built_in">JSON</span>.stringify(params, <span class="literal">null</span>, <span class="string">"    "</span>));</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="使用云函数推送钉钉消息"><a href="#使用云函数推送钉钉消息" class="headerlink" title="使用云函数推送钉钉消息"></a>使用云函数推送钉钉消息</h4><h5 id="调试钉钉消息类型及数据格式"><a href="#调试钉钉消息类型及数据格式" class="headerlink" title="调试钉钉消息类型及数据格式"></a>调试钉钉消息类型及数据格式</h5><ol><li>创建钉钉机器人，并复制 webhook 地址。</li></ol><p><img src="https://raw.githubusercontent.com/songxingguo/songxingguo.github.io/hexo/static/images/FhiBRGA1W_Z4-GzqzjiH5esIggKG.png" alt></p><ol start="2"><li>打开<a href="https://hoppscotch.io/" target="_blank" rel="noopener">在线接口调试工具</a>，输入 Webhook 地址，配置钉钉<a href="https://open.dingtalk.com/document/robots/custom-robot-access#title-72m-8ag-pqw" target="_blank" rel="noopener">消息类型及数据格式</a>。</li></ol><p><img src="https://raw.githubusercontent.com/songxingguo/songxingguo.github.io/hexo/static/images/FqEYt6cimbEW4pJDET2YEsevO3bQ.png" alt></p><ol start="3"><li>调试到自己想要的效果后复制请求的代码。</li></ol><p><img src="https://raw.githubusercontent.com/songxingguo/songxingguo.github.io/hexo/static/images/FqxbJqsBt0_l1REj_8luZiqzFBxH.png" alt></p><hr><p>这个函数是通过 post 请求进行调用，首先需要从请求体中获取<code>slug</code>和<code>title</code>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> data = <span class="built_in">JSON</span>.parse(params.body);</span><br><span class="line"><span class="keyword">const</span> &#123; slug, title &#125; = data.data;</span><br></pre></td></tr></table></figure><p>然后再请求钉钉机器人的 Webhook 地址。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> axios = <span class="built_in">require</span>(<span class="string">"axios"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> options = &#123;</span><br><span class="line">  method: <span class="string">"POST"</span>,</span><br><span class="line">  url: <span class="string">"https://oapi.dingtalk.com/robot/send"</span>,</span><br><span class="line">  params: &#123;</span><br><span class="line">    access_token: <span class="string">""</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  headers: &#123; <span class="string">"content-type"</span>: <span class="string">"application/json"</span> &#125;,</span><br><span class="line">  data: &#123;</span><br><span class="line">    msgtype: <span class="string">"actionCard"</span>,</span><br><span class="line">    actionCard: &#123;</span><br><span class="line">      title: <span class="string">"文档发布"</span>,</span><br><span class="line">      text: <span class="string">`<span class="subst">$&#123;title&#125;</span>`</span>,</span><br><span class="line">      btnOrientation: <span class="string">"0"</span>,</span><br><span class="line">      btns: [</span><br><span class="line">        &#123;</span><br><span class="line">          title: <span class="string">"发布"</span>,</span><br><span class="line">          actionURL: <span class="string">`https://xx-xx-xx.cn-hangzhou.fcapp.run?slug=<span class="subst">$&#123;slug&#125;</span>`</span>,</span><br><span class="line">        &#125;, <span class="comment">// 触发GithubAction云函数的公网地址</span></span><br><span class="line">        &#123;</span><br><span class="line">          title: <span class="string">"Actions"</span>,</span><br><span class="line">          actionURL:</span><br><span class="line">            <span class="string">"https://github.com/songxingguo/songxingguo.github.io/actions"</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">axios</span><br><span class="line">  .request(options)</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(response.data);</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.error(error);</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><p>其中<code>access_token</code>为钉钉 webhook 地址中的授权码。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="comment">//oapi.dingtalk.com/robot/send?access_token=xx</span></span><br></pre></td></tr></table></figure><p>最终的效果如下所示。<br><img src="https://raw.githubusercontent.com/songxingguo/songxingguo.github.io/hexo/static/images/FgwZMGzVe6xjsIMMsYyDrVxql0ku.png" alt><br>完整代码如下。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> getRawBody = <span class="built_in">require</span>(<span class="string">"raw-body"</span>);</span><br><span class="line"><span class="keyword">var</span> getFormBody = <span class="built_in">require</span>(<span class="string">"body/form"</span>);</span><br><span class="line"><span class="keyword">var</span> body = <span class="built_in">require</span>(<span class="string">"body"</span>);</span><br><span class="line"><span class="keyword">var</span> axios = <span class="built_in">require</span>(<span class="string">"axios"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">To enable the initializer feature (https://help.aliyun.com/document_detail/156876.html)</span></span><br><span class="line"><span class="comment">please implement the initializer function as below：</span></span><br><span class="line"><span class="comment">exports.initializer = (context, callback) =&gt; &#123;</span></span><br><span class="line"><span class="comment">  console.log('initializing');</span></span><br><span class="line"><span class="comment">  callback(null, '');</span></span><br><span class="line"><span class="comment">&#125;;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">exports.handler = <span class="function">(<span class="params">req, resp, context</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"hello world"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> params = &#123;</span><br><span class="line">    path: req.path,</span><br><span class="line">    queries: req.queries,</span><br><span class="line">    headers: req.headers,</span><br><span class="line">    method: req.method,</span><br><span class="line">    requestURI: req.url,</span><br><span class="line">    clientIP: req.clientIP,</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  getRawBody(req, <span class="keyword">async</span> (err, body) =&gt; &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> req.queries) &#123;</span><br><span class="line">      <span class="keyword">var</span> value = req.queries[key];</span><br><span class="line">      resp.setHeader(key, value);</span><br><span class="line">    &#125;</span><br><span class="line">    resp.setHeader(<span class="string">"Content-Type"</span>, <span class="string">"text/plain"</span>);</span><br><span class="line">    params.body = body.toString();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> data = <span class="built_in">JSON</span>.parse(params.body);</span><br><span class="line">    <span class="keyword">const</span> &#123; slug, title &#125; = data.data;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"slug"</span>, slug);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> options = &#123;</span><br><span class="line">      method: <span class="string">"POST"</span>,</span><br><span class="line">      url: <span class="string">"https://oapi.dingtalk.com/robot/send"</span>,</span><br><span class="line">      params: &#123;</span><br><span class="line">        access_token: <span class="string">""</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      headers: &#123; <span class="string">"content-type"</span>: <span class="string">"application/json"</span> &#125;,</span><br><span class="line">      data: &#123;</span><br><span class="line">        msgtype: <span class="string">"actionCard"</span>,</span><br><span class="line">        actionCard: &#123;</span><br><span class="line">          title: <span class="string">"文档发布"</span>,</span><br><span class="line">          text: <span class="string">`<span class="subst">$&#123;title&#125;</span>`</span>,</span><br><span class="line">          btnOrientation: <span class="string">"0"</span>,</span><br><span class="line">          btns: [</span><br><span class="line">            &#123;</span><br><span class="line">              title: <span class="string">"发布"</span>,</span><br><span class="line">              actionURL: <span class="string">`https://xx-xx-xx.cn-hangzhou.fcapp.run?slug=<span class="subst">$&#123;slug&#125;</span>`</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              title: <span class="string">"Actions"</span>,</span><br><span class="line">              actionURL:</span><br><span class="line">                <span class="string">"https://github.com/songxingguo/songxingguo.github.io/actions"</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">          ],</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">await</span> axios</span><br><span class="line">      .request(options)</span><br><span class="line">      .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(response.data);</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.error(error);</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">    resp.send(<span class="built_in">JSON</span>.stringify(params, <span class="literal">null</span>, <span class="string">"    "</span>));</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="配置语雀-Webhook"><a href="#配置语雀-Webhook" class="headerlink" title="配置语雀 Webhook"></a>配置语雀 Webhook</h4><p>进入语雀<a href="https://www.yuque.com/songxingguo/devhints/settings/webhooks" target="_blank" rel="noopener">webhook 配置页面</a>，填写名称和<strong>推送钉钉消息</strong>云函数的公网地址，并选择<strong>更新文档</strong>时触发。<br><img src="https://raw.githubusercontent.com/songxingguo/songxingguo.github.io/hexo/static/images/Fmtzly3_0hghg_uvqaK6eDgmsT-M.png" alt></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="Hoppscotch"><a href="#Hoppscotch" class="headerlink" title="Hoppscotch"></a><a href="https://hoppscotch.io/" target="_blank" rel="noopener">Hoppscotch</a></h3><p>Hoppscotch 和 postman 的功能是一样的，但这个是线上的版本，更加的方便。有时请求会出现请求无法到达的问题，需要配置插件代理，将请求的域名加入到插件中。<br><img src="https://raw.githubusercontent.com/songxingguo/songxingguo.github.io/hexo/static/images/FkPke4qlMP1Zv2PALiW8f-dAATr5.png" alt></p><h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a><a href="https://www.yuque.com/songxingguo/devhints/gwpsg4dq6tp27z3s" target="_blank" rel="noopener">拓展阅读</a></h2><p><a href="https://www.yuque.com/1874w/1874.cool/ovugli?view=doc_embed" target="_blank" rel="noopener">Github Actions 持续集成 Docker 构建并部署 Node 项目到云服务器</a></p><p><a href="https://github.com/LetTTGACO/yuque-hexo-example" target="_blank" rel="noopener">yueque-hexo 图床配置</a></p><p><a href="https://www.yuque.com/1874w/1874.cool/roeayv?view=doc_embed" target="_blank" rel="noopener">语雀云端写作 Hexo+Github Actions+COS 持续集成</a><br><a href="https://www.yuque.com/yuque/developer/doc-webhook?view=doc_embed" target="_blank" rel="noopener">Webhooks</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>从零开始搭建在线个人简历</title>
      <link href="/2023/02/05/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E5%9C%A8%E7%BA%BF%E4%B8%AA%E4%BA%BA%E7%AE%80%E5%8E%86/"/>
      <url>/2023/02/05/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E5%9C%A8%E7%BA%BF%E4%B8%AA%E4%BA%BA%E7%AE%80%E5%8E%86/</url>
      
        <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>做这个在线简历是出于两点考虑。</p><ul><li>word 文档式的简历没有办法展示到网上，不能体现我作为一个前端开发工程师的专长。</li><li>之前也写过一个在线简历，但是现在不好维护了。主要原因是之前使用 Webpack 打包，对于一个简历的小项目来说比较重。然后之前的图床是使用七牛云进行存储的，但现在七牛云所有域名都需要备案，我之前的域名地址也被莫名其妙（😡）的被删除了，已经无力去维护。如果后面有时间和精力再进行升级优化吧。</li></ul><p>基于上面的两点考虑，我决定做一个简单的且易于维护的在线简历。这次打包采用了开箱即用的<a href="https://parceljs.org/" target="_blank" rel="noopener">parceljs</a>，对于在线简历这个小项目正好合适。而且这次简历依然是使用了模版引擎<a href="https://ejs.bootcss.com/" target="_blank" rel="noopener">ejs</a>，让数据和模版分离，通过 json 文件来配置简历，在设计思想上这个参考了<a href="https://jsonresume.org/" target="_blank" rel="noopener">Json-Resume</a>，在样式上参考了<a href="https://shoyuf.top/resume" target="_blank" rel="noopener">SHOYUF</a>的简历。</p><a id="more"></a><h3 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a>传送门</h3><ul><li>如果不想从零开始配置就可以直接下载<code>[example](https://github.com/sarscode/parcel-transformer-ejs)</code>运行。</li><li>该项目的<a href="https://github.com/songxingguo/resume" target="_blank" rel="noopener">开源地址</a>在 github 上，分支为<code>feature-ejs</code>。</li><li>如果想将简历发布到线上可以参考<a href="https://www.yuque.com/songxingguo/devhints/tfub27hk86lsdrpb" target="_blank" rel="noopener">使用 Github Action 部署静态网站</a>。</li></ul><h2 id="从零开始搭建一个-MVP-项目"><a href="#从零开始搭建一个-MVP-项目" class="headerlink" title="从零开始搭建一个 MVP 项目"></a>从零开始搭建一个 MVP 项目</h2><h3 id="安装和配置parcel"><a href="#安装和配置parcel" class="headerlink" title="安装和配置parcel"></a>安装和配置<code>parcel</code></h3><ol><li>创建一个 resume 文件夹</li><li>使用 <code>npm init</code>初始化<code>package.json</code>，全部都选择默认选项。</li><li>安装<code>parcel</code></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev parcel</span><br></pre></td></tr></table></figure><ol start="4"><li>在<code>package.json</code>中添加任务脚本</li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">"scripts": &#123;</span><br><span class="line">    "dev": "parcel",</span><br><span class="line">    "build": "parcel build"</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>新建 src 目录，并在目录下新建<code>index.ejs</code>文件，并在<code>index.ejs</code>中添加内容。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Hello parcel！<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello parcel!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后在配置<code>package.json</code>中配置 parcel 的入口文件。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"source": "src/index.ejs",</span><br></pre></td></tr></table></figure><h3 id="安装和配置parcel-transformer-ejs"><a href="#安装和配置parcel-transformer-ejs" class="headerlink" title="安装和配置parcel-transformer-ejs"></a>安装和配置<code>parcel-transformer-ejs</code></h3><ol start="6"><li>安装<code>parcel-transformer-ejs</code></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -D parcel-transformer-ejs</span><br></pre></td></tr></table></figure><p><a href="https://www.npmjs.com/package/parcel-transformer-ejs" target="_blank" rel="noopener">parcel-transformer-ejs</a> 是一个 ejs 转换器，将 ejs 转换成 html，这个库唯一的缺点就是修改了 json 配置文件之后，页面并没有更新，对开发效率还是影响蛮大的。</p><blockquote><p>现在的解决办法是，修改了<code>.ejsrc</code>再立即修改一下<code>index.ejs</code>就会更新页面了。</p></blockquote><ol start="7"><li>在根目录下新建<code>.parcelrc</code>，配置<a href="https://parceljs.org/" target="_blank" rel="noopener">parcel</a>转换器。</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"extends"</span>: [<span class="string">"@parcel/config-default"</span>],</span><br><span class="line">  <span class="attr">"transformers"</span>: &#123;</span><br><span class="line">    <span class="attr">"*.ejs"</span>: [<span class="string">"parcel-transformer-ejs"</span>]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="8"><li>在 src 目录下新建<code>.ejsrc</code>作为<strong>简历配置</strong>文件，json 格式可以参考<a href="https://jsonresume.org/schema/" target="_blank" rel="noopener">jsonresume</a>。</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"basics"</span>: &#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"John Doe"</span>,</span><br><span class="line">    <span class="attr">"label"</span>: <span class="string">"Programmer"</span>,</span><br><span class="line">    <span class="attr">"image"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"email"</span>: <span class="string">"john@gmail.com"</span>,</span><br><span class="line">    <span class="attr">"phone"</span>: <span class="string">"(912) 555-4321"</span>,</span><br><span class="line">    <span class="attr">"url"</span>: <span class="string">"https://johndoe.com"</span>,</span><br><span class="line">    <span class="attr">"summary"</span>: <span class="string">"A summary of John Doe…"</span>,</span><br><span class="line">    <span class="attr">"location"</span>: &#123;</span><br><span class="line">      <span class="attr">"address"</span>: <span class="string">"2712 Broadway St"</span>,</span><br><span class="line">      <span class="attr">"postalCode"</span>: <span class="string">"CA 94115"</span>,</span><br><span class="line">      <span class="attr">"city"</span>: <span class="string">"San Francisco"</span>,</span><br><span class="line">      <span class="attr">"countryCode"</span>: <span class="string">"US"</span>,</span><br><span class="line">      <span class="attr">"region"</span>: <span class="string">"California"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"profiles"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"network"</span>: <span class="string">"Twitter"</span>,</span><br><span class="line">        <span class="attr">"username"</span>: <span class="string">"john"</span>,</span><br><span class="line">        <span class="attr">"url"</span>: <span class="string">"https://twitter.com/john"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"work"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"name"</span>: <span class="string">"Company"</span>,</span><br><span class="line">      <span class="attr">"position"</span>: <span class="string">"President"</span>,</span><br><span class="line">      <span class="attr">"url"</span>: <span class="string">"https://company.com"</span>,</span><br><span class="line">      <span class="attr">"startDate"</span>: <span class="string">"2013-01-01"</span>,</span><br><span class="line">      <span class="attr">"endDate"</span>: <span class="string">"2014-01-01"</span>,</span><br><span class="line">      <span class="attr">"summary"</span>: <span class="string">"Description…"</span>,</span><br><span class="line">      <span class="attr">"highlights"</span>: [<span class="string">"Started the company"</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"volunteer"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"organization"</span>: <span class="string">"Organization"</span>,</span><br><span class="line">      <span class="attr">"position"</span>: <span class="string">"Volunteer"</span>,</span><br><span class="line">      <span class="attr">"url"</span>: <span class="string">"https://organization.com/"</span>,</span><br><span class="line">      <span class="attr">"startDate"</span>: <span class="string">"2012-01-01"</span>,</span><br><span class="line">      <span class="attr">"endDate"</span>: <span class="string">"2013-01-01"</span>,</span><br><span class="line">      <span class="attr">"summary"</span>: <span class="string">"Description…"</span>,</span><br><span class="line">      <span class="attr">"highlights"</span>: [<span class="string">"Awarded 'Volunteer of the Month'"</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"education"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"institution"</span>: <span class="string">"University"</span>,</span><br><span class="line">      <span class="attr">"url"</span>: <span class="string">"https://institution.com/"</span>,</span><br><span class="line">      <span class="attr">"area"</span>: <span class="string">"Software Development"</span>,</span><br><span class="line">      <span class="attr">"studyType"</span>: <span class="string">"Bachelor"</span>,</span><br><span class="line">      <span class="attr">"startDate"</span>: <span class="string">"2011-01-01"</span>,</span><br><span class="line">      <span class="attr">"endDate"</span>: <span class="string">"2013-01-01"</span>,</span><br><span class="line">      <span class="attr">"score"</span>: <span class="string">"4.0"</span>,</span><br><span class="line">      <span class="attr">"courses"</span>: [<span class="string">"DB1101 - Basic SQL"</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"awards"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"title"</span>: <span class="string">"Award"</span>,</span><br><span class="line">      <span class="attr">"date"</span>: <span class="string">"2014-11-01"</span>,</span><br><span class="line">      <span class="attr">"awarder"</span>: <span class="string">"Company"</span>,</span><br><span class="line">      <span class="attr">"summary"</span>: <span class="string">"There is no spoon."</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"certificates"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"name"</span>: <span class="string">"Certificate"</span>,</span><br><span class="line">      <span class="attr">"date"</span>: <span class="string">"2021-11-07"</span>,</span><br><span class="line">      <span class="attr">"issuer"</span>: <span class="string">"Company"</span>,</span><br><span class="line">      <span class="attr">"url"</span>: <span class="string">"https://certificate.com"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"publications"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"name"</span>: <span class="string">"Publication"</span>,</span><br><span class="line">      <span class="attr">"publisher"</span>: <span class="string">"Company"</span>,</span><br><span class="line">      <span class="attr">"releaseDate"</span>: <span class="string">"2014-10-01"</span>,</span><br><span class="line">      <span class="attr">"url"</span>: <span class="string">"https://publication.com"</span>,</span><br><span class="line">      <span class="attr">"summary"</span>: <span class="string">"Description…"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"skills"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"name"</span>: <span class="string">"Web Development"</span>,</span><br><span class="line">      <span class="attr">"level"</span>: <span class="string">"Master"</span>,</span><br><span class="line">      <span class="attr">"keywords"</span>: [<span class="string">"HTML"</span>, <span class="string">"CSS"</span>, <span class="string">"JavaScript"</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"languages"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"language"</span>: <span class="string">"English"</span>,</span><br><span class="line">      <span class="attr">"fluency"</span>: <span class="string">"Native speaker"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"interests"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"name"</span>: <span class="string">"Wildlife"</span>,</span><br><span class="line">      <span class="attr">"keywords"</span>: [<span class="string">"Ferrets"</span>, <span class="string">"Unicorns"</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"references"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"name"</span>: <span class="string">"Jane Doe"</span>,</span><br><span class="line">      <span class="attr">"reference"</span>: <span class="string">"Reference…"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"projects"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"name"</span>: <span class="string">"Project"</span>,</span><br><span class="line">      <span class="attr">"description"</span>: <span class="string">"Description…"</span>,</span><br><span class="line">      <span class="attr">"highlights"</span>: [<span class="string">"Won award at AIHacks 2016"</span>],</span><br><span class="line">      <span class="attr">"keywords"</span>: [<span class="string">"HTML"</span>],</span><br><span class="line">      <span class="attr">"startDate"</span>: <span class="string">"2019-01-01"</span>,</span><br><span class="line">      <span class="attr">"endDate"</span>: <span class="string">"2021-01-01"</span>,</span><br><span class="line">      <span class="attr">"url"</span>: <span class="string">"https://project.com/"</span>,</span><br><span class="line">      <span class="attr">"roles"</span>: [<span class="string">"Team Lead"</span>],</span><br><span class="line">      <span class="attr">"entity"</span>: <span class="string">"Entity"</span>,</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"application"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="9"><li>修改一下<code>index.ejs</code>，添加一些<a href="https://www.yuque.com/songxingguo/devhints/xnf7wu5wxoucphtg" target="_blank" rel="noopener">ejs 语法</a>。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">  &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"IE=edge"</span>&gt;</span><br><span class="line">  &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">  &lt;title&gt;Hello EJS！&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;h2&gt;&lt;%= basics.name %&gt;&lt;/h2&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>最后，你就能运行它了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 以开发模式运行</span></span><br><span class="line">npm run dev</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以生成模式运行</span></span><br><span class="line">npm run build</span><br></pre></td></tr></table></figure><p>下面是运行效果。<br><img src="https://raw.githubusercontent.com/songxingguo/songxingguo.github.io/hexo/static/images/FohM8kpQxrzWA2KnUa7KGYQPG_5s.png" alt></p><h2 id="一些小优化"><a href="#一些小优化" class="headerlink" title="一些小优化"></a>一些小优化</h2><h3 id="加粗文字或者添加链接"><a href="#加粗文字或者添加链接" class="headerlink" title="加粗文字或者添加链接"></a>加粗文字或者添加链接</h3><ol><li>在文本中添加标签。</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"basics"</span>: &#123;</span><br><span class="line">    <span class="attr">"summary"</span>: <span class="string">"A &lt;b&gt;summary&lt;/b&gt; of &lt;a href='https://www.songxingguo.com/'&gt;John Doe&lt;/a&gt;…"</span>,</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><ol start="2"><li>输出是使用<code>&lt;%-</code>可以不转义 html。</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- basics.summary %&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li>效果如下。</li></ol><p><img src="https://raw.githubusercontent.com/songxingguo/songxingguo.github.io/hexo/static/images/Fu-fmOUIpyTJCfvtcquiD09XdaBq.png" alt></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>使用Github Action部署静态网站</title>
      <link href="/2023/01/15/%E4%BD%BF%E7%94%A8Github%20Action%E9%83%A8%E7%BD%B2%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99/"/>
      <url>/2023/01/15/%E4%BD%BF%E7%94%A8Github%20Action%E9%83%A8%E7%BD%B2%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99/</url>
      
        <content type="html"><![CDATA[<h2 id="生成-token"><a href="#生成-token" class="headerlink" title="生成 token"></a>生成 token</h2><ol><li>进入 Github 生成<a href="https://github.com/settings/apps" target="_blank" rel="noopener">授权 token 的页面</a>，创建一个 token，修改名称并选择所有仓库。</li></ol><p><img src="https://raw.githubusercontent.com/songxingguo/songxingguo.github.io/hexo/static/images/FpT1FXfdY0l7BGM5m1bJf8CpX2vJ.png" alt></p><a id="more"></a><ol start="2"><li>将仓库权限设置中的 Content 项，设置为读和写。</li></ol><p><img src="https://raw.githubusercontent.com/songxingguo/songxingguo.github.io/hexo/static/images/Fq0KQlr3rLfbLvpcG3eeBuR3obCM.png" alt></p><ol start="3"><li>最后点击确认生成 token，并<strong>复制</strong>，<strong>注意 ⚠️ 刷新之后就没有办法复制了</strong>。</li></ol><p><img src="https://raw.githubusercontent.com/songxingguo/songxingguo.github.io/hexo/static/images/Fv9aHq1-NNLTVgSUqUFagqiuXnKq.png" alt></p><h2 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h2><ol><li>进入到<strong>项目</strong>设置页面，选择添加<a href="https://github.com/songxingguo/resume/settings/secrets/actions" target="_blank" rel="noopener">Actions 的环境变量</a>。</li></ol><p><img src="https://raw.githubusercontent.com/songxingguo/songxingguo.github.io/hexo/static/images/FrIY5Jtbgpf4f6dVbJw05tgPrnLU.png" alt></p><ol start="2"><li>输入变量名称<code>ACCESS_TOKEN</code>，密钥一栏粘贴刚才复制的 Token，点击添加就完成了。</li></ol><p><img src="https://raw.githubusercontent.com/songxingguo/songxingguo.github.io/hexo/static/images/Fl6OpNuIfRyDofKm-aKoQSfW8LAr.png" alt></p><h2 id="项目中添加配置文件"><a href="#项目中添加配置文件" class="headerlink" title="项目中添加配置文件"></a>项目中添加配置文件</h2><ol><li>在项目的更目录下创建<code>.github/workflows/static.yml</code>。</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">name: GitHub Actions Build and Deploy</span><br><span class="line">on:</span><br><span class="line">  push:</span><br><span class="line">    branches:</span><br><span class="line">      - main #触发自动化部署的分支</span><br><span class="line">jobs:</span><br><span class="line">  build-and-deploy:</span><br><span class="line">    runs-on: ubuntu-latest</span><br><span class="line">    steps:</span><br><span class="line">      - name: Checkout 🛎️ #从触发分支检出代码</span><br><span class="line">        uses: actions/checkout@v3</span><br><span class="line">        <span class="keyword">with</span>:</span><br><span class="line">          persist-credentials: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">      - name: Install and Build 🔧 #安装依赖并且打包静态文件</span><br><span class="line">        run: |</span><br><span class="line">          npm i</span><br><span class="line">          npm run build</span><br><span class="line">      - name: Deploy 🚀</span><br><span class="line">        uses: JamesIves/github-pages-deploy-action@v4</span><br><span class="line">        <span class="keyword">with</span>:</span><br><span class="line">          ACCESS_TOKEN: $&#123;&#123; secrets.ACCESS_TOKEN &#125;&#125;</span><br><span class="line">          BRANCH: gh-pages #部署的分支</span><br><span class="line">          FOLDER: dist #打包后静态文件所在的位置</span><br><span class="line">          CLEAN: <span class="literal">true</span></span><br></pre></td></tr></table></figure><ol start="2"><li>然后提交代码就开始自动部署了。</li></ol><p><img src="https://raw.githubusercontent.com/songxingguo/songxingguo.github.io/hexo/static/images/FtBuIbPHuD4YxSJImJg7yFsektPM.png" alt></p><h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
